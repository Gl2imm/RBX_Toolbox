# coding: utf-8

"""
    assets-upload-api

    An autogenerated client for the assets-upload-api.  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from openapi_client.configuration import Configuration


class RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'status': 'RobloxOperationscoreOperationserviceV1Beta1OperationStatus',
        'result': 'RobloxOperationscoreOperationserviceV1Beta1PublicAssetCreationResult',
        'public_error': 'RobloxOperationscoreOperationserviceV1Beta1PublicError'
    }

    attribute_map = {
        'status': 'status',
        'result': 'result',
        'public_error': 'publicError'
    }

    def __init__(self, status=None, result=None, public_error=None, local_vars_configuration=None):  # noqa: E501
        """RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._status = None
        self._result = None
        self._public_error = None
        self.discriminator = None

        if status is not None:
            self.status = status
        if result is not None:
            self.result = result
        if public_error is not None:
            self.public_error = public_error

    @property
    def status(self):
        """Gets the status of this RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse.  # noqa: E501


        :return: The status of this RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse.  # noqa: E501
        :rtype: RobloxOperationscoreOperationserviceV1Beta1OperationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse.


        :param status: The status of this RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse.  # noqa: E501
        :type status: RobloxOperationscoreOperationserviceV1Beta1OperationStatus
        """

        self._status = status

    @property
    def result(self):
        """Gets the result of this RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse.  # noqa: E501


        :return: The result of this RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse.  # noqa: E501
        :rtype: RobloxOperationscoreOperationserviceV1Beta1PublicAssetCreationResult
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse.


        :param result: The result of this RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse.  # noqa: E501
        :type result: RobloxOperationscoreOperationserviceV1Beta1PublicAssetCreationResult
        """

        self._result = result

    @property
    def public_error(self):
        """Gets the public_error of this RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse.  # noqa: E501


        :return: The public_error of this RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse.  # noqa: E501
        :rtype: RobloxOperationscoreOperationserviceV1Beta1PublicError
        """
        return self._public_error

    @public_error.setter
    def public_error(self, public_error):
        """Sets the public_error of this RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse.


        :param public_error: The public_error of this RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse.  # noqa: E501
        :type public_error: RobloxOperationscoreOperationserviceV1Beta1PublicError
        """

        self._public_error = public_error

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, RobloxAssetsManagementAssetsUploadApiGetUploadStatusResponse):
            return True

        return self.to_dict() != other.to_dict()
